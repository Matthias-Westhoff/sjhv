"use strict";
/*
 * Copyright 2021, Matthias Westhoff
 * Released under the MIT license
 *
 * Date: 2021.10.28
 */
class SJHV{constructor(t){this.values="object"==typeof t?t:{}}updateHTML(){for(var t=document.querySelectorAll("[data-sjhv]"),e=0;e<t.length;e++)this.exec(t[e])}updateChildren(t){t.hasAttribute("data-sjhv")&&this.exec(t);for(var e=t.querySelectorAll(":scope [data-sjhv]"),s=0;s<t.length;s++)this.exec(e[s])}updateAll(t){for(var e=0;e<t.length;e++)this.exec(t[e])}updateOnly(t){this.exec(t)}exec(t){let e=this,s=t.dataset.sjhv;!function t(s,r){for(var l in s)if(s.hasOwnProperty(l)){let a=s[l];if(a instanceof BoundVar){let t=e;for(let e=0;e<a.path.length;e++)t=t[a.path[e]];r[l]=t}else"object"==typeof a?t(a,r[l]):r[l]=a}}(e.bounds[s],t)}boundVar(t){return new BoundVar(["values"].concat(t.split(".")))}setNestedValue(t,e){let s=t.split("."),r=this.values;for(let t=0;t<s.length-1;t++)r.hasOwnProperty(s[t])||(r[s[t]]={}),r=r[s[t]];return r[s[s.length-1]]=e,t}setNestedBound(t,e){let s=t.split("."),r=this.bounds;for(let t=0;t<s.length-1;t++)this.hasOwnProperty(s[t])||(r[s[t]]={}),r=r[s[t]];return r[s[s.length-1]]=e,t}values={};bounds={}}class BoundVar{constructor(t){this.path="object"==typeof t?t:[]}}